#BlueJ class context
comment0.target=Taktgeber
comment0.text=\r\n\ <h1>Taktgeber</h1>\r\n\ ist\ eine\ Klasse,\ die\ in\ gleichen\ Zeitabstaenden\ ein\ Taktsignal\ gibt.<br/><br/>\r\n\ \r\n\ \ Ueber\ die\ Methode\ <b>wurdeSignalisiert)</b>\ kann\ der\ Status\ abgefragt\ werden.<br/>\r\n\ \ Es\ wird\ gemeldet,\ ob\ sich\ seit\ der\ letzten\ Abfrage\ die\ ein\ Taktsignal\ ereignet\ hat.<br/>\r\n\ \ <br/>\r\n\ \ Status\ zurueck\:\ ruecksetzenTimer()\ <br/>\r\n\ \ <br\ />\ \ \ \ \ \r\n\ \ Mit\ warteBisTaktsignal()\ kann\ die\ Ausf&uuml;hrung\ angehalten\ werden\ bis\ zum\ Taktsignal.<br/>\r\n\ \ \ \ \ \ \r\n\ \ Ist\ der\ Kommunikationslink\ gesetzt,\ meldet\ das\ Objekt\ das\ <b><i>Zeitsignal</i></b>.\ <br/><br/>\r\n\ \ \r\n\ <hr>\ \r\n\ @author\ Hans\ Witt\r\n\ \r\n\ @version\r\n\ Version\ 3\ (21.8.2008)\ <br/>\r\n\ \t\ \ \ \ \ Methode\ mehrfach(\ int\ anzahl\ )\ implementiert\ <br/>\r\n\ \t\t\ Methode\ start()\ entfernt.\ Durch\ Setzen\ der\ Anzahl\ startet\ der\ Timer\ <br/>\ \ \t\r\n
comment1.params=
comment1.target=Taktgeber()
comment10.params=
comment10.target=void\ warteBisTaktsignal()
comment10.text=\r\n\ Unterbricht\ das\ Programm\ bis\ zum\ n&auml;chsten\ Taktsignal\ \r\n
comment11.params=delay
comment11.target=void\ setzteZeitZwischenAktionen(int)
comment11.text=\r\n\ SetzeWiederholungsverzoegerung\r\n
comment12.params=delay
comment12.target=void\ setzteAnfangsZeitverzoegerung(int)
comment12.text=\r\n\ SetzeAnfangsverzoegerung\r\n
comment13.params=anzahl
comment13.target=void\ mehrfach(int)
comment13.text=\r\n\ Timer\ mit\ Wiederholung\ automatischer\ Stop\ nach\ anzahl\ Intervallen\r\n
comment14.params=
comment14.target=void\ einmal()
comment14.text=\r\n\ einmaliges\ Signalisieren\r\n
comment15.params=delay
comment15.target=void\ einmal(int)
comment15.text=\r\n\ einmaliges\ Signalisieren\r\n
comment16.params=
comment16.target=void\ endlos()
comment16.text=\r\n\ Timer\ mit\ Endlos-Wiederholung\r\n
comment17.params=anfangsDelay\ zwischenDelay
comment17.target=void\ endlos(int,\ int)
comment17.text=\r\n\ Timer\ mit\ Endlos-Wiederholung\r\n\r\n\ \ \r\n
comment18.params=
comment18.target=void\ stop()
comment19.params=
comment19.target=boolean\ laufend()
comment19.text=\r\n\ Status\ des\ Timers\r\n\ \r\n\ @return\ Timer\ l&auml;uft?\r\n
comment2.params=arg0
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=linkObj\ ID
comment3.target=Taktgeber(ITuWas,\ int)
comment3.text=\r\n\ Konstruktor\ mit\ gleichzeitigem\ Setzen\ des\ tuWas-Objekts\r\n\ \r\n\ @param\ linkObj\r\n\ @param\ ID\r\n
comment4.params=
comment4.target=void\ tuWas()
comment5.params=
comment5.target=void\ run()
comment6.params=ID
comment6.target=void\ setzeID(int)
comment6.text=\r\n\ Setzen\ des\ KommunikationsIDs.\ Der\ ID\ wird\ beim\ Aufruf\ von\ tuWas\ zur&uuml;ckgegeben\ und\ kann\ den\ Aufrufer\ indentifizieren<br/>\r\n\ \r\n\ @param\ ID\r\n
comment7.params=linkObj
comment7.target=void\ setzeLink(ITuWas)
comment7.text=\r\n\ Setzen\ des\ Kommunikationslinks<br/>\r\n\ \r\n\ @param\ linkObj\r\n
comment8.params=linkObj\ basisID
comment8.target=void\ setzeLink(ITuWas,\ int)
comment8.text=\r\n\ Setzen\ des\ Kommunikationslinks<br/>\r\n\ Setzen\ des\ KommunikationsIDs.\ Der\ ID\ wird\ beim\ Aufruf\ von\ tuWas\ zur&uuml;ckgegeben\ und\ kann\ den\ Aufrufer\ indentifizieren<br/>\r\n\ \r\n\ @param\ linkObj\r\n\ @param\ basisID\r\n\ \r\n
comment9.params=
comment9.target=boolean\ wurdeSignalisiert()
comment9.text=\r\n\ Es\ wird\ abgefragt,\ ob\ seit\ der\ letzten\ Nachfrage\ der\ Timer\ sihnalisiert\r\n\ hat\r\n\ \r\n\ @return\ Ergebnis\r\n
numComments=20
